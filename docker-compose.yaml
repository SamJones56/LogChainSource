# version: '3.8'

volumes:
  genesis:
  node1:
  node2:

networks:
  mcNet:
    name: mcNEt

services:
  genesis:
    hostname: genesis
    build:
      context: .
      dockerfile: dockerFiles/Docker
    container_name: genesis
    networks:
      - mcNet
    volumes:
      - ../multichain/genesis_data:/root/.multichain
    # privileged: true
    # working_dir: /root
    ports:
      - 7010:7010
      - 7011:7011
      - 8000:8000
    entrypoint: ["sh", "-c", "python3 app/genesisInit.py && touch /root/done && tail -f /dev/null"]
# python3 genesis.py && 
    # wait for genesis to finish
    healthcheck: 
      test: ["CMD", "test", "-f", "/root/done"]
      interval: 5s
      retries: 20
      start_period: 5s
      timeout: 3s

  node1:
    hostname: node1
    build:
      context: .
      dockerfile: dockerFiles/Docker
    container_name: node1
    networks:
      - mcNet
    depends_on:
      genesis:
        condition: service_healthy
    volumes:
      - ../multichain/node1_data:/root/.multichain
    ports:
      - 7020:7020
      - 7021:7021
    entrypoint: ["sh", "-c", "python3 app/nodeInit.py && touch /root/done && tail -f /dev/null"]
    # python3 node.py &&
    # wait for node to finish
    healthcheck: 
      test: ["CMD", "test", "-f", "/root/done"]
      interval: 5s
      retries: 20
      start_period: 5s
      timeout: 3s

  node2:
    hostname: node2
    build:
      context: .
      dockerfile: dockerFiles/Docker
    container_name: node2
    networks:
      - mcNet
    depends_on:
      node1:
        condition: service_healthy
    volumes:
      - ../multichain/node2_data:/root/.multichain
    ports:
    - 7030:7030
    - 7031:7031
    entrypoint: ["sh", "-c", "python3 app/nodeInit.py && touch /root/done && tail -f /dev/null"]
    # python3 node.py &&